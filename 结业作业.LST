C51 COMPILER V9.01   结业作业                                                              08/17/2018 12:20:38 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE 结业作业
OBJECT MODULE PLACED IN 结业作业.OBJ
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE 结业作业.c BROWSE DEBUG OBJECTEXTEND

line level    source

   1          #include<reg51.h>
   2          #define uint unsigned int
   3          #define uchar unsigned char
   4          
   5          /****共阴数码管0--9+全灭段码****/
   6          uchar code led[]={
   7          0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x00
   8          };
   9          
  10          uchar a[6];//数码管显示 
  11          uchar b[6]={0xfe,0xfd,0xfb,0xf7,0xef,0xdf};//数码管位码
  12          /****子函数声明****/
  13          void delay_ms(uint z);//带参数ms级延时子函数
  14          void init();//初始化函数
  15          void timechuli();//时间处理
  16          void key();//按键函数
  17          void display();//显示函数
  18          
  19          /****变量定义****/
  20          
  21          uint num;  // 记录毫秒为秒的变量
  22          uchar hour=23;
  23          uchar minite=59;
  24          uchar second=56; 
  25          uchar hour1=0;
  26          uchar minite1=1;
  27          uchar second1=0;
  28          
  29          uchar k;
  30          uchar flag;//更新时间的4种模式加上正常模式
  31          uchar S_flag;//闪烁标志位
  32          
  33          /****位定义****/
  34          sbit beep=P3^6; //蜂鸣器
  35          sbit led0=P3^0; //整点显示
  36          sbit led1=P3^7; //闹钟报时显示
  37          sbit  flashflag=P3^1;
  38          
  39          sbit key1=P1^0;//模式切换键1正常模式 2时钟时调整 3时钟分调整 4闹钟时调整 5闹时钟分调整
  40          sbit key2=P1^1;//加1
  41          sbit key3=P1^2;//减1
  42          sbit key4=P1^3; //复位键
  43          
  44          void main()
  45          {
  46   1          init();
  47   1      while(1)
  48   1      {
  49   2      key();
  50   2           display();
  51   2      }
  52   1      }
  53          
  54          void display()
  55          {
C51 COMPILER V9.01   结业作业                                                              08/17/2018 12:20:38 PAGE 2   

  56   1      switch(flag)
  57   1      {
  58   2      case 0:  //时钟显示模式
  59   2      {
  60   3      a[0]=led[hour/10];
  61   3      a[1]=led[hour%10];
  62   3      a[2]=led[minite/10];
  63   3      a[3]=led[minite%10];
  64   3      a[4]=led[second/10];
  65   3      a[5]=led[second%10];
  66   3      }
  67   2      break;
  68   2      
  69   2         case 1:  // 时钟 时调整模式
  70   2      {
  71   3      if(S_flag==1)  //标志位为1                                                               
  72   3      {
  73   4      a[0]=led[hour/10];//调整时钟的时
  74   4      a[1]=led[hour%10];
  75   4      }
  76   3      else
  77   3      {
  78   4      a[0]=led[11];//关闭显示                                                         
  79   4      a[1]=led[11];
  80   4      }
  81   3      a[2]=led[minite/10];
  82   3      a[3]=led[minite%10];
  83   3      a[4]=led[second/10];
  84   3      a[5]=led[second%10];
  85   3      }
  86   2      break;
  87   2      case 2:  //时钟 分调整模式
  88   2      {
  89   3      a[0]=led[hour/10];
  90   3      a[1]=led[hour%10];
  91   3      if(S_flag==1)  
  92   3      {
  93   4      a[2]=led[minite/10];
  94   4      a[3]=led[minite%10];
  95   4      }
  96   3      else
  97   3      {
  98   4      a[2]=led[11];
  99   4      a[3]=led[11];
 100   4      }
 101   3      a[4]=led[second/10];
 102   3      a[5]=led[second%10];
 103   3      }
 104   2      break;
 105   2      
 106   2         case 3:  // 闹钟 时调整模式
 107   2      {
 108   3      if(S_flag==1)
 109   3      {
 110   4      a[0]=led[hour1/10];
 111   4      a[1]=led[hour1%10];
 112   4      }
 113   3      else
 114   3      {
 115   4      a[0]=led[11];
 116   4      a[1]=led[11];
 117   4      }
C51 COMPILER V9.01   结业作业                                                              08/17/2018 12:20:38 PAGE 3   

 118   3      
 119   3      a[2]=led[minite1/10];
 120   3      a[3]=led[minite1%10];
 121   3      
 122   3      a[4]=led[11];
 123   3      a[5]=led[11];
 124   3      }
 125   2      break;
 126   2      
 127   2      case 4: 
 128   2      {
 129   3      a[0]=led[hour1/10];
 130   3      a[1]=led[hour1%10];
 131   3      
 132   3      if(S_flag==1)// 闹钟 分调整模式
 133   3      {
 134   4      a[2]=led[minite1/10];
 135   4      a[3]=led[minite1%10];
 136   4      }
 137   3      else
 138   3      {
 139   4      a[2]=led[11];
 140   4      a[3]=led[11];
 141   4      }
 142   3      a[4]=led[11]; 
 143   3      a[5]=led[11]; ///
 144   3      }
 145   2      break;
 146   2      
 147   2      }
 148   1      }
 149          
 150          
 151          void init()
 152          {
 153   1          beep=0;//关闭蜂鸣器
 154   1          flag=0;//正常时钟显示模式
 155   1          S_flag=0;//闪烁标志位
 156   1          TMOD=0X01;//定时器T0 方式1
 157   1          TH0=(65536-50000)/256;//重装初值
 158   1          TL0=(65536-50000)%256;
 159   1          EA=1;//开总中断
 160   1          ET0=1;//开启定时器T0
 161   1          TR0=1;
 162   1      }
 163          
 164          
 165          
 166          void time0() interrupt 1
 167          {
 168   1      TH0=(65536-50000)/256;//重装初值
 169   1      TL0=(65536-50000)%256;
 170   1      num++;
 171   1      if(num==20)//1S到
 172   1      {
 173   2      num=0;
 174   2      timechuli();//时间处理函数
 175   2      }
 176   1      if(hour1==hour&&minite1==minite&&second<5)//闹钟时间到
 177   1      {
 178   2       beep=!beep;
 179   2       led1=!led1;
C51 COMPILER V9.01   结业作业                                                              08/17/2018 12:20:38 PAGE 4   

 180   2      }
 181   1      else//闹钟提醒时间到后 关闭蜂鸣器和指示灯
 182   1      {
 183   2      beep=0;
 184   2      led1=0;
 185   2      }
 186   1      
 187   1      if((minite==0)&&(second==0)) //整点到 
 188   1      {
 189   2      led0=!led0;
 190   2      }
 191   1      else  //关闭LED指示
 192   1       led0=0;
 193   1      
 194   1      if(num%20==0) //1S取反一次
 195   1          S_flag=!S_flag;     //闪烁标志位取反
 196   1      
 197   1      for(k=0;k<6;k++)
 198   1      {
 199   2      P2=b[k];  //送位码
 200   2      P0=a[k];  //送段码                                                                         
 201   2      delay_ms(2);
 202   2      P2=0xff;//消影
 203   2      }
 204   1      }
 205          
 206          
 207          void key()
 208          {
 209   1      if(key1==0)//模式切换键按下
 210   1      {
 211   2      delay_ms(10);
 212   2      if(key1==0)
 213   2      {
 214   3        flag++;
 215   3        if(flag==5)
 216   3        {
 217   4      flag=0;
 218   4        }
 219   3      }
 220   2      while(!key1) ; //等待按键释放
 221   2      }
 222   1      if(flag!=0)                                                                
 223   1      {
 224   2      switch(flag)                                                                    
 225   2      {
 226   3      case 1:   //时钟时调整
 227   3      {
 228   4      if(key2==0)  //时钟时加1
 229   4      {
 230   5      delay_ms(10);
 231   5      if(key2==0)
 232   5      {
 233   6      if(hour<23) hour++;
 234   6      else hour=0;
 235   6      }
 236   5      while(!key2);
 237   5      }
 238   4      
 239   4      if(key3==0)  //时钟时减1
 240   4      {
 241   5      delay_ms(10);
C51 COMPILER V9.01   结业作业                                                              08/17/2018 12:20:38 PAGE 5   

 242   5      if(key3==0)
 243   5      {
 244   6             if(hour> 0) hour--;
 245   6      else hour=23;
 246   6      }
 247   5      while(!key3) ;
 248   5      }
 249   4      }  
 250   3      break;
 251   3      
 252   3      case 2:   //时钟分调整
 253   3      {
 254   4      if(key2==0)  //时钟分加1
 255   4      {
 256   5      delay_ms(10);
 257   5      if(key2==0)
 258   5      {
 259   6      if(minite<59) minite++;
 260   6      else minite=0;
 261   6      }
 262   5      while(!key2);
 263   5      }
 264   4      
 265   4      if(key3==0)  //时钟分减1
 266   4      {
 267   5      delay_ms(10);
 268   5      if(key3==0)
 269   5      {
 270   6             if(minite> 0)minite--;
 271   6      else minite=59;
 272   6      }
 273   5      while(!key3);
 274   5      }
 275   4      }  
 276   3      break;
 277   3      
 278   3      case 3:   //闹钟时调整
 279   3      {
 280   4      if(key2==0)  //闹钟时加1
 281   4      {
 282   5      delay_ms(10);
 283   5      if(key2==0)
 284   5      {
 285   6      if(hour1<23) hour1++;
 286   6      else hour1=0;
 287   6      }
 288   5      while(!key2);
 289   5      }
 290   4      
 291   4      if(key3==0)  //闹钟时减1
 292   4      {
 293   5      delay_ms(10);
 294   5      if(key3==0)
 295   5      {
 296   6             if(hour1> 0) hour1--;
 297   6      else hour1=23;
 298   6      }
 299   5      while(!key3);
 300   5      }
 301   4      }  
 302   3      break;
 303   3      
C51 COMPILER V9.01   结业作业                                                              08/17/2018 12:20:38 PAGE 6   

 304   3      case 4:   //闹钟分调整
 305   3      {
 306   4      if(key2==0)  //闹钟分加1
 307   4      {
 308   5      delay_ms(10);
 309   5      if(key2==0)
 310   5      {
 311   6      if(minite1<59) minite1++;
 312   6      else minite1=0;
 313   6      }
 314   5      while(!key2) ;
 315   5      }
 316   4      
 317   4      if(key3==0)  //闹钟分减1
 318   4      {
 319   5      delay_ms(10);
 320   5      if(key3==0)
 321   5      {
 322   6             if(minite1> 0)minite1--;
 323   6      else minite1=59;
 324   6      }
 325   5      while(!key3);
 326   5      }
 327   4      }  
 328   3      break;
 329   3      
 330   3      }
 331   2      }
 332   1      if(key4==0)//复位键
 333   1      {
 334   2      delay_ms(10);
 335   2      if(key4==0)
 336   2      {
 337   3         flag=0;
 338   3      hour=0;
 339   3      minite=0;
 340   3      second=0;
 341   3      }
 342   2      while(!key4);
 343   2      }
 344   1      }
 345          
 346          
 347          void delay_ms(uint z)  
 348          {
 349   1      uint x,y;
 350   1      for(x=z;x>0;x--)
 351   1      for(y=110;y>0;y--);
 352   1      }
 353          //时间自走函数
 354          void timechuli()
 355          {
 356   1      second++;
 357   1         if(second%2==0)
 358   1         flashflag=1;
 359   1         else flashflag=0;
 360   1         if(second==60)
 361   1         {
 362   2         second=0;
 363   2         minite++;
 364   2         }
 365   1         if( minite==60)
C51 COMPILER V9.01   结业作业                                                              08/17/2018 12:20:38 PAGE 7   

 366   1         {
 367   2          minite=0;
 368   2          hour++;
 369   2         }
 370   1         if(hour==24)
 371   1         hour=0;
 372   1      
 373   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    940    ----
   CONSTANT SIZE    =     11    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
